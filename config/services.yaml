# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    admin.ecole:
            class: App\Admin\EcoleAdmin
            arguments: [~, App\Entity\Ecole, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Ecole }
            public: true
    admin.cursus:
            class: App\Admin\CursusAdmin
            arguments: [~, App\Entity\Cursus, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Cursus }
            public: true

    admin.semestre:
                 class: App\Admin\SemestreAdmin
                 arguments: [~, App\Entity\Semestre, ~]
                 tags:
                     - { name: sonata.admin, manager_type: orm, label: Semestre }
                 public: true

    admin.classe:
             class: App\Admin\ClasseAdmin
             arguments: [~, App\Entity\Classe, ~]
             tags:
                 - { name: sonata.admin, manager_type: orm, label: Classe }
             public: true

    admin.users:
                class: App\Admin\AdministrateurAdmin
                arguments: [~, App\Entity\Users, ~]
                tags:
                    - { name: sonata.admin, manager_type: orm, label: Utilisateurs }
                public: true

